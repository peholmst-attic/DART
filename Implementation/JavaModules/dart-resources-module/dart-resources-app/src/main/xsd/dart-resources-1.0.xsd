<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://www.pkhapps.net/dart/modules/resources/1.0"
           xmlns="http://www.pkhapps.net/dart/modules/resources/1.0"
           elementFormDefault="qualified">

    <!--
    This XSD defines the messages that DART Resources Module produces and consumes over RabbitMQ.
    XSD is used to make it easy to generate the necessary Java classes wherever they are needed without resorting to
    shared libraries.
    -->

    <!-- Data types -->

    <xs:complexType name="coordinates">
        <xs:sequence>
            <xs:element name="latitude" type="xs:decimal"/>
            <xs:element name="longitude" type="xs:decimal"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="resourceType">
        <xs:sequence>
            <xs:element name="id" type="xs:long"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="description" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="station">
        <xs:sequence>
            <xs:element name="id" type="xs:long"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="location" type="coordinates"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="resource">
        <xs:sequence>
            <xs:element name="id" type="xs:long"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="resourceTypeId" type="xs:long"/>
            <xs:element name="stationId" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="statusDescriptor">
        <xs:sequence>
            <xs:element name="id" type="xs:long"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="color" type="xs:integer"/>
            <xs:element name="userSelectable" type="xs:boolean"/>
            <xs:element name="usingStationLocation" type="xs:boolean"/>
            <xs:element name="usingLiveLocation" type="xs:boolean"/>
            <xs:element name="allowedTransition" type="xs:long" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="resourceLocation">
        <xs:sequence>
            <xs:element name="id" type="xs:long"/>
            <xs:element name="timestamp" type="xs:dateTime"/>
            <xs:element name="location" type="coordinates"/>
            <xs:element name="resourceId" type="xs:long"/>
            <xs:element name="userId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="resourceStatus">
        <xs:sequence>
            <xs:element name="id" type="xs:long"/>
            <xs:element name="timestamp" type="xs:dateTime"/>
            <xs:element name="statusDescriptorId" type="xs:long"/>
            <xs:element name="resourceId" type="xs:long"/>
            <xs:element name="userId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Message Types -->

    <xs:complexType name="command" abstract="true">
        <xs:annotation>
            <xs:documentation>Base type for commands.</xs:documentation>
        </xs:annotation>
    </xs:complexType>

    <xs:complexType name="request" abstract="true">
        <xs:annotation>
            <xs:documentation>Base type for requests.</xs:documentation>
        </xs:annotation>
    </xs:complexType>

    <xs:complexType name="response" abstract="true">
        <xs:annotation>
            <xs:documentation>Base type for responses.</xs:documentation>
        </xs:annotation>
    </xs:complexType>

    <xs:complexType name="event" abstract="true">
        <xs:annotation>
            <xs:documentation>Base type for events.</xs:documentation>
        </xs:annotation>
    </xs:complexType>

    <xs:complexType name="findStatusDescriptorsRequest">
        <xs:annotation>
            <xs:documentation>
                Request for retrieving status descriptors. The list of returned descriptors can be filtered by
                explicitly including or excluding certain descriptors. If no filter has been applied, all active
                descriptors are returned.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="request">
                <xs:sequence>
                    <xs:element name="includeId" type="xs:long" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="excludeId" type="xs:long" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="statusDescriptorsResponse">
        <xs:annotation>
            <xs:documentation>
                Response containing status descriptors.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="response">
                <xs:sequence>
                    <xs:element name="statusDescriptor" type="statusDescriptor" minOccurs="0"
                                maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="findResourcesRequestType">
        <xs:annotation>
            <xs:documentation>
                Request for retrieving resources. The list of returned resources can be filtered by
                explicitly including or excluding certain resources. If no filter has been applied, all active
                resources are returned. It is also possible to specify which additional information should be included
                in the result (location, status, type, station).
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="request">
                <xs:sequence>
                    <xs:element name="includeName" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="excludeName" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="includeLocation" type="xs:boolean" minOccurs="0"/>
                    <xs:element name="includeStatus" type="xs:boolean" minOccurs="0"/>
                    <xs:element name="includeType" type="xs:boolean" minOccurs="0"/>
                    <xs:element name="includeStation" type="xs:boolean" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="resourcesResponseType">
        <xs:annotation>
            <xs:documentation>
                Response containing resources.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="response">
                <xs:sequence>
                    <xs:element name="resource" minOccurs="0" maxOccurs="unbounded">
                        <xs:complexType>
                            <xs:complexContent>
                                <xs:extension base="resource">
                                    <xs:sequence>
                                        <xs:element name="location" type="resourceLocation" minOccurs="0"/>
                                        <xs:element name="status" type="resourceStatus" minOccurs="0"/>
                                        <xs:element name="type" type="resourceType" minOccurs="0"/>
                                        <xs:element name="station" type="station" minOccurs="0"/>
                                    </xs:sequence>
                                </xs:extension>
                            </xs:complexContent>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="setResourceStatusCommand">
        <xs:annotation>
            <xs:documentation>
                Command for setting the status of a resource.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="command">
                <xs:sequence>
                    <xs:element name="resourceName" type="xs:string"/>
                    <xs:element name="statusDescriptorId" type="xs:long"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="setResourceLocationCommand">
        <xs:annotation>
            <xs:documentation>
                Command for setting the location of a resource.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="command">
                <xs:sequence>
                    <xs:element name="resourceName" type="xs:string"/>
                    <xs:element name="location" type="coordinates"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="resourceStatusOrLocationChangedEvent">
        <xs:annotation>
            <xs:documentation>
                Event published whenever the status or the location of a resource is changed.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="event">
                <xs:sequence>
                    <xs:element name="resourceName" type="xs:string"/>
                    <xs:element name="status" type="resourceStatus" minOccurs="0"/>
                    <xs:element name="location" type="resourceLocation" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Actual format of the message documents -->

    <xs:element name="setResourceStatusCommand" type="setResourceStatusCommand"/>
    <xs:element name="setResourceLocationCommand" type="setResourceLocationCommand"/>
    <xs:element name="findResourcesRequest" type="findResourcesRequestType"/>
    <xs:element name="statusDescriptorsResponse" type="statusDescriptorsResponse"/>
    <xs:element name="findStatusDescriptorsRequest" type="findStatusDescriptorsRequest"/>
    <xs:element name="resourcesResponse" type="resourcesResponseType"/>
</xs:schema>